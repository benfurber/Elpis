// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Comments when there are comments renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Comments
    comments={
      Array [
        Object {
          "author": Object {
            "avatarPath": Object {
              "testUri": "../../../app/assets/images/profile-pic-may.jpg",
            },
            "name": "May F",
          },
          "body": "Dá certo sim, o meu pai, por exemplo, fugiu quando eu tinha 5 anos e eu não faço ideia da onde ele esteja. Nunca mais voltou, pena que a violência só piorou.",
          "dateCreated": 2019-01-01T00:00:00.000Z,
          "id": "21097",
          "replies": Array [],
          "title": "Meu pai fez o que ela mandou…",
          "totalReplies": 0,
        },
      ]
    }
    description="A simple string"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <View
          style={
            Object {
              "backgroundColor": "rgba(255, 255, 255, 0.85)",
              "borderRadius": 5,
              "margin": 10,
              "padding": 10,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
              }
            }
          >
            A simple string
          </Text>
        </View>,
        <View
          style={
            Object {
              "paddingHorizontal": 10,
              "paddingVertical": 20,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
              }
            }
          >
            Nenhum comentário ainda - faça o primeiro!
          </Text>
        </View>,
      ],
      "style": Object {
        "backgroundColor": "rgba(255, 255, 255, 0.85)",
        "borderTopRightRadius": 5,
        "width": "100%",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Text
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
              }
            }
          >
            A simple string
          </Text>,
          "style": Object {
            "backgroundColor": "rgba(255, 255, 255, 0.85)",
            "borderRadius": 5,
            "margin": 10,
            "padding": 10,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "A simple string",
            "style": Object {
              "fontSize": 18,
              "fontWeight": "bold",
            },
          },
          "ref": null,
          "rendered": "A simple string",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Text
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
              }
            }
          >
            Nenhum comentário ainda - faça o primeiro!
          </Text>,
          "style": Object {
            "paddingHorizontal": 10,
            "paddingVertical": 20,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Nenhum comentário ainda - faça o primeiro!",
            "style": Object {
              "fontSize": 18,
              "fontWeight": "bold",
            },
          },
          "ref": null,
          "rendered": "Nenhum comentário ainda - faça o primeiro!",
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <View
            style={
              Object {
                "backgroundColor": "rgba(255, 255, 255, 0.85)",
                "borderRadius": 5,
                "margin": 10,
                "padding": 10,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 18,
                  "fontWeight": "bold",
                }
              }
            >
              A simple string
            </Text>
          </View>,
          <View
            style={
              Object {
                "paddingHorizontal": 10,
                "paddingVertical": 20,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 18,
                  "fontWeight": "bold",
                }
              }
            >
              Nenhum comentário ainda - faça o primeiro!
            </Text>
          </View>,
        ],
        "style": Object {
          "backgroundColor": "rgba(255, 255, 255, 0.85)",
          "borderTopRightRadius": 5,
          "width": "100%",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Text
              style={
                Object {
                  "fontSize": 18,
                  "fontWeight": "bold",
                }
              }
            >
              A simple string
            </Text>,
            "style": Object {
              "backgroundColor": "rgba(255, 255, 255, 0.85)",
              "borderRadius": 5,
              "margin": 10,
              "padding": 10,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "A simple string",
              "style": Object {
                "fontSize": 18,
                "fontWeight": "bold",
              },
            },
            "ref": null,
            "rendered": "A simple string",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Text
              style={
                Object {
                  "fontSize": 18,
                  "fontWeight": "bold",
                }
              }
            >
              Nenhum comentário ainda - faça o primeiro!
            </Text>,
            "style": Object {
              "paddingHorizontal": 10,
              "paddingVertical": 20,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Nenhum comentário ainda - faça o primeiro!",
              "style": Object {
                "fontSize": 18,
                "fontWeight": "bold",
              },
            },
            "ref": null,
            "rendered": "Nenhum comentário ainda - faça o primeiro!",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Comments when there are no comments renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Comments
    comments={Array []}
    description="A simple string"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <View
          style={
            Object {
              "backgroundColor": "rgba(255, 255, 255, 0.85)",
              "borderRadius": 5,
              "margin": 10,
              "padding": 10,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
              }
            }
          >
            A simple string
          </Text>
        </View>,
        <View
          style={
            Object {
              "paddingHorizontal": 10,
              "paddingVertical": 20,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
              }
            }
          >
            Nenhum comentário ainda - faça o primeiro!
          </Text>
        </View>,
      ],
      "style": Object {
        "backgroundColor": "rgba(255, 255, 255, 0.85)",
        "borderTopRightRadius": 5,
        "width": "100%",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Text
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
              }
            }
          >
            A simple string
          </Text>,
          "style": Object {
            "backgroundColor": "rgba(255, 255, 255, 0.85)",
            "borderRadius": 5,
            "margin": 10,
            "padding": 10,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "A simple string",
            "style": Object {
              "fontSize": 18,
              "fontWeight": "bold",
            },
          },
          "ref": null,
          "rendered": "A simple string",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Text
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "bold",
              }
            }
          >
            Nenhum comentário ainda - faça o primeiro!
          </Text>,
          "style": Object {
            "paddingHorizontal": 10,
            "paddingVertical": 20,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Nenhum comentário ainda - faça o primeiro!",
            "style": Object {
              "fontSize": 18,
              "fontWeight": "bold",
            },
          },
          "ref": null,
          "rendered": "Nenhum comentário ainda - faça o primeiro!",
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <View
            style={
              Object {
                "backgroundColor": "rgba(255, 255, 255, 0.85)",
                "borderRadius": 5,
                "margin": 10,
                "padding": 10,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 18,
                  "fontWeight": "bold",
                }
              }
            >
              A simple string
            </Text>
          </View>,
          <View
            style={
              Object {
                "paddingHorizontal": 10,
                "paddingVertical": 20,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 18,
                  "fontWeight": "bold",
                }
              }
            >
              Nenhum comentário ainda - faça o primeiro!
            </Text>
          </View>,
        ],
        "style": Object {
          "backgroundColor": "rgba(255, 255, 255, 0.85)",
          "borderTopRightRadius": 5,
          "width": "100%",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Text
              style={
                Object {
                  "fontSize": 18,
                  "fontWeight": "bold",
                }
              }
            >
              A simple string
            </Text>,
            "style": Object {
              "backgroundColor": "rgba(255, 255, 255, 0.85)",
              "borderRadius": 5,
              "margin": 10,
              "padding": 10,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "A simple string",
              "style": Object {
                "fontSize": 18,
                "fontWeight": "bold",
              },
            },
            "ref": null,
            "rendered": "A simple string",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Text
              style={
                Object {
                  "fontSize": 18,
                  "fontWeight": "bold",
                }
              }
            >
              Nenhum comentário ainda - faça o primeiro!
            </Text>,
            "style": Object {
              "paddingHorizontal": 10,
              "paddingVertical": 20,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Nenhum comentário ainda - faça o primeiro!",
              "style": Object {
                "fontSize": 18,
                "fontWeight": "bold",
              },
            },
            "ref": null,
            "rendered": "Nenhum comentário ainda - faça o primeiro!",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
