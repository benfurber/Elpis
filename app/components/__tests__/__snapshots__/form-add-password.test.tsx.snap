// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormAddPassword when active renders correctly 1`] = `
<View>
  <MessageBox
    display="warn"
    message="Uma senha forte, por favor."
  />
  <View
    style={
      Object {
        "alignItems": "baseline",
        "flexDirection": "row-reverse",
        "marginBottom": 20,
      }
    }
  >
    <NewTextInput
      displayStyle="active"
      onChangeText={[Function]}
      placeholder="Defina uma senha"
      secureTextEntry={true}
      textContentType="password"
      value=""
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "baseline",
        "flexDirection": "row-reverse",
        "marginBottom": 20,
      }
    }
  >
    <NewTextInput
      displayStyle="active"
      onChangeText={[Function]}
      placeholder="Repita a senha"
      secureTextEntry={true}
      textContentType="password"
      value=""
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "baseline",
        "flexDirection": "row-reverse",
        "marginBottom": 20,
      }
    }
  >
    <Mutation
      mutation={
        Object {
          "definitions": Array [
            Object {
              "directives": Array [],
              "kind": "OperationDefinition",
              "name": Object {
                "kind": "Name",
                "value": "updatePassword",
              },
              "operation": "mutation",
              "selectionSet": Object {
                "kind": "SelectionSet",
                "selections": Array [
                  Object {
                    "alias": undefined,
                    "arguments": Array [
                      Object {
                        "kind": "Argument",
                        "name": Object {
                          "kind": "Name",
                          "value": "password",
                        },
                        "value": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "password",
                          },
                        },
                      },
                    ],
                    "directives": Array [],
                    "kind": "Field",
                    "name": Object {
                      "kind": "Name",
                      "value": "updatePassword",
                    },
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "id",
                          },
                          "selectionSet": undefined,
                        },
                      ],
                    },
                  },
                ],
              },
              "variableDefinitions": Array [
                Object {
                  "defaultValue": undefined,
                  "directives": Array [],
                  "kind": "VariableDefinition",
                  "type": Object {
                    "kind": "NonNullType",
                    "type": Object {
                      "kind": "NamedType",
                      "name": Object {
                        "kind": "Name",
                        "value": "String",
                      },
                    },
                  },
                  "variable": Object {
                    "kind": "Variable",
                    "name": Object {
                      "kind": "Name",
                      "value": "password",
                    },
                  },
                },
              ],
            },
          ],
          "kind": "Document",
          "loc": Object {
            "end": 110,
            "start": 0,
          },
        }
      }
    >
      <Component />
    </Mutation>
  </View>
</View>
`;

exports[`FormAddPassword when passwords match and the password is strong renders correctly 1`] = `
<View>
  <MessageBox
    display="warn"
    message="Uma senha forte, por favor."
  />
  <View
    style={
      Object {
        "alignItems": "baseline",
        "flexDirection": "row-reverse",
        "marginBottom": 20,
      }
    }
  >
    <NewTextInput
      displayStyle="active"
      onChangeText={[Function]}
      placeholder="Defina uma senha"
      secureTextEntry={true}
      textContentType="password"
      value="s3cuRe!!!"
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "baseline",
        "flexDirection": "row-reverse",
        "marginBottom": 20,
      }
    }
  >
    <NewTextInput
      displayStyle="active"
      onChangeText={[Function]}
      placeholder="Repita a senha"
      secureTextEntry={true}
      textContentType="password"
      value="s3cuRe!!!"
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "baseline",
        "flexDirection": "row-reverse",
        "marginBottom": 20,
      }
    }
  >
    <Mutation
      mutation={
        Object {
          "definitions": Array [
            Object {
              "directives": Array [],
              "kind": "OperationDefinition",
              "name": Object {
                "kind": "Name",
                "value": "updatePassword",
              },
              "operation": "mutation",
              "selectionSet": Object {
                "kind": "SelectionSet",
                "selections": Array [
                  Object {
                    "alias": undefined,
                    "arguments": Array [
                      Object {
                        "kind": "Argument",
                        "name": Object {
                          "kind": "Name",
                          "value": "password",
                        },
                        "value": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "password",
                          },
                        },
                      },
                    ],
                    "directives": Array [],
                    "kind": "Field",
                    "name": Object {
                      "kind": "Name",
                      "value": "updatePassword",
                    },
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "id",
                          },
                          "selectionSet": undefined,
                        },
                      ],
                    },
                  },
                ],
              },
              "variableDefinitions": Array [
                Object {
                  "defaultValue": undefined,
                  "directives": Array [],
                  "kind": "VariableDefinition",
                  "type": Object {
                    "kind": "NonNullType",
                    "type": Object {
                      "kind": "NamedType",
                      "name": Object {
                        "kind": "Name",
                        "value": "String",
                      },
                    },
                  },
                  "variable": Object {
                    "kind": "Variable",
                    "name": Object {
                      "kind": "Name",
                      "value": "password",
                    },
                  },
                },
              ],
            },
          ],
          "kind": "Document",
          "loc": Object {
            "end": 110,
            "start": 0,
          },
        }
      }
    >
      <Component />
    </Mutation>
  </View>
</View>
`;

exports[`FormAddPassword when passwords match and the password is weak renders correctly 1`] = `
<View>
  <MessageBox
    display="warn"
    message="Uma senha forte, por favor."
  />
  <View
    style={
      Object {
        "alignItems": "baseline",
        "flexDirection": "row-reverse",
        "marginBottom": 20,
      }
    }
  >
    <NewTextInput
      displayStyle="active"
      onChangeText={[Function]}
      placeholder="Defina uma senha"
      secureTextEntry={true}
      textContentType="password"
      value="abc"
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "baseline",
        "flexDirection": "row-reverse",
        "marginBottom": 20,
      }
    }
  >
    <NewTextInput
      displayStyle="active"
      onChangeText={[Function]}
      placeholder="Repita a senha"
      secureTextEntry={true}
      textContentType="password"
      value="abc"
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "baseline",
        "flexDirection": "row-reverse",
        "marginBottom": 20,
      }
    }
  >
    <Mutation
      mutation={
        Object {
          "definitions": Array [
            Object {
              "directives": Array [],
              "kind": "OperationDefinition",
              "name": Object {
                "kind": "Name",
                "value": "updatePassword",
              },
              "operation": "mutation",
              "selectionSet": Object {
                "kind": "SelectionSet",
                "selections": Array [
                  Object {
                    "alias": undefined,
                    "arguments": Array [
                      Object {
                        "kind": "Argument",
                        "name": Object {
                          "kind": "Name",
                          "value": "password",
                        },
                        "value": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "password",
                          },
                        },
                      },
                    ],
                    "directives": Array [],
                    "kind": "Field",
                    "name": Object {
                      "kind": "Name",
                      "value": "updatePassword",
                    },
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "id",
                          },
                          "selectionSet": undefined,
                        },
                      ],
                    },
                  },
                ],
              },
              "variableDefinitions": Array [
                Object {
                  "defaultValue": undefined,
                  "directives": Array [],
                  "kind": "VariableDefinition",
                  "type": Object {
                    "kind": "NonNullType",
                    "type": Object {
                      "kind": "NamedType",
                      "name": Object {
                        "kind": "Name",
                        "value": "String",
                      },
                    },
                  },
                  "variable": Object {
                    "kind": "Variable",
                    "name": Object {
                      "kind": "Name",
                      "value": "password",
                    },
                  },
                },
              ],
            },
          ],
          "kind": "Document",
          "loc": Object {
            "end": 110,
            "start": 0,
          },
        }
      }
    >
      <Component />
    </Mutation>
  </View>
</View>
`;

exports[`FormAddPassword when there's an error renders correctly 1`] = `
<View>
  <MessageBox
    display="error"
    message="Something went wrong"
  />
  <View
    style={
      Object {
        "alignItems": "baseline",
        "flexDirection": "row-reverse",
        "marginBottom": 20,
      }
    }
  >
    <NewTextInput
      displayStyle="error"
      onChangeText={[Function]}
      placeholder="Defina uma senha"
      secureTextEntry={true}
      textContentType="password"
      value=""
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "baseline",
        "flexDirection": "row-reverse",
        "marginBottom": 20,
      }
    }
  >
    <NewTextInput
      displayStyle="error"
      onChangeText={[Function]}
      placeholder="Repita a senha"
      secureTextEntry={true}
      textContentType="password"
      value=""
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "baseline",
        "flexDirection": "row-reverse",
        "marginBottom": 20,
      }
    }
  >
    <Mutation
      mutation={
        Object {
          "definitions": Array [
            Object {
              "directives": Array [],
              "kind": "OperationDefinition",
              "name": Object {
                "kind": "Name",
                "value": "updatePassword",
              },
              "operation": "mutation",
              "selectionSet": Object {
                "kind": "SelectionSet",
                "selections": Array [
                  Object {
                    "alias": undefined,
                    "arguments": Array [
                      Object {
                        "kind": "Argument",
                        "name": Object {
                          "kind": "Name",
                          "value": "password",
                        },
                        "value": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "password",
                          },
                        },
                      },
                    ],
                    "directives": Array [],
                    "kind": "Field",
                    "name": Object {
                      "kind": "Name",
                      "value": "updatePassword",
                    },
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "id",
                          },
                          "selectionSet": undefined,
                        },
                      ],
                    },
                  },
                ],
              },
              "variableDefinitions": Array [
                Object {
                  "defaultValue": undefined,
                  "directives": Array [],
                  "kind": "VariableDefinition",
                  "type": Object {
                    "kind": "NonNullType",
                    "type": Object {
                      "kind": "NamedType",
                      "name": Object {
                        "kind": "Name",
                        "value": "String",
                      },
                    },
                  },
                  "variable": Object {
                    "kind": "Variable",
                    "name": Object {
                      "kind": "Name",
                      "value": "password",
                    },
                  },
                },
              ],
            },
          ],
          "kind": "Document",
          "loc": Object {
            "end": 110,
            "start": 0,
          },
        }
      }
    >
      <Component />
    </Mutation>
  </View>
</View>
`;
